#!/bin/bash

# Create a new directory and enter it
md () {
	mkdir -p "$@" && cd "$@"
}

# Extract archives - use: extract <file>
# Based on http://dotfiles.org/~pseup/.bashrc
extract () {
	if [ -f "$1" ] ; then
		local filename=$(basename "$1")
		local foldername="${filename%%.*}"
		local fullpath=`perl -e 'use Cwd "abs_path";print abs_path(shift)' "$1"`
		local didfolderexist=false
		if [ -d "$foldername" ]; then
			didfolderexist=true
			read -p "$foldername already exists, do you want to overwrite it? (y/n) " -n 1
			echo
			if [[ $REPLY =~ ^[Nn]$ ]]; then
				return
			fi
		fi
		mkdir -p "$foldername" && cd "$foldername"
		case $1 in
			*.tar.bz2) tar xjf "$fullpath" ;;
			*.tar.gz) tar xzf "$fullpath" ;;
			*.tar.xz) tar Jxvf "$fullpath" ;;
			*.tar.Z) tar xzf "$fullpath" ;;
			*.tar) tar xf "$fullpath" ;;
			*.taz) tar xzf "$fullpath" ;;
			*.tb2) tar xjf "$fullpath" ;;
			*.tbz) tar xjf "$fullpath" ;;
			*.tbz2) tar xjf "$fullpath" ;;
			*.tgz) tar xzf "$fullpath" ;;
			*.txz) tar Jxvf "$fullpath" ;;
			*.zip) unzip "$fullpath" ;;
			*) echo "'$1' cannot be extracted via extract()" && cd .. && ! $didfolderexist && rm -r "$foldername" ;;
		esac
	else
		echo "'$1' is not a valid file"
	fi
}

# Make a tarball from anything
tarball () {
    if [[ -n "$1" && -n "$2" ]]; then
        tar -zcvf "$2" -C "$1" .
    else
        echo 'Usage: tarball indir out.tar.gz'
        return 1
    fi
}

# Install a package from the AUR
aur_get () {
    URL="https://aur.archlinux.org/$1.git"
    mkdir -p ./aur_temp
    if test -e "./aur_temp/$1"; then
        cd "./aur_temp/$1"
        git pull --ff-only
    else
        git clone "$URL" "./aur_temp/$1"
        cd "./aur_temp/$1"
    fi
    makepkg
    sudo pacman -U *.pkg.tar.zst
    cd ../..
}

# Install a list of packages
install_pkglist () {
    if [ -f "/etc/arch-release" ]; then
        # Install official arch packages
        pacman -Syyu $(cat "$1" | tr '\n' ' ') --noconfirm
    else
        echo "Don't know how to install packages on this system."
    fi
}
